"0","rarefaction_sampler = function(input_dat, n_iterations)"
"0","{"
"0","  n = nrow(moth_dat) #number of rows or sample observations"
"0","  m = 100 #number of bootstrap iterations"
"0",""
"0","  moth_result = matrix("
"0","    nrow = m,"
"0","    ncol = n)"
"0",""
"0","  # The outer loop: runs once for each bootstrap iteration.  index variable is i"
"0","  for(i in 1:m)"
"0","  {"
"0","    # The inner loop: simulates increasing sampling intensity"
"0","    # Sampling intensity ranges from 1 site to the complete count of sites (24)"
"0","    # index variable is j"
"0","    for(j in 1:n)"
"0","    {"
"0",""
"0","      # sample the input data row indices, with replacement"
"0","      rows_j = sample(n, size = j, replace=TRUE)"
"0",""
"0","      # Creates a new data matrix"
"0","      t1 = moth_dat[rows_j, ]"
"0",""
"0","      # Calculates the column sums"
"0","      t2 = apply(t1, 2, sum)"
"0",""
"0","      # Counts the number of columns in which any moths were observed"
"0","      moth_result[i, j] = sum(t2 > 0)"
"0","    }"
"0","  }"
"0",""
"0","  return(moth_result)"
"0","}"
"0",""
"0","rarefact = rarefaction_sampler(moth_dat, 100)"
"0","head(rarefact)"
"1","    "
"1"," [,1]"
"1"," [,2]"
"1"," [,3]"
"1"," [,4]"
"1"," [,5]"
"1"," [,6]"
"1"," [,7]"
"1"," [,8]"
"1"," [,9]"
"1"," [,10]"
"1"," [,11]"
"1"," [,12]"
"1"," [,13]"
"1"," [,14]"
"1","
[1,]"
"1","    5"
"1","    8"
"1","    7"
"1","    8"
"1","    8"
"1","   10"
"1","   10"
"1","   10"
"1","   10"
"1","    10"
"1","     9"
"1","    10"
"1","    10"
"1","    10"
"1","
[2,]"
"1","    6"
"1","    8"
"1","    6"
"1","    9"
"1","    8"
"1","   10"
"1","   10"
"1","   10"
"1","   10"
"1","    10"
"1","    10"
"1","    10"
"1","    10"
"1","    10"
"1","
[3,]"
"1","    6"
"1","    5"
"1","    8"
"1","    9"
"1","    9"
"1","    8"
"1","   10"
"1","   10"
"1","    9"
"1","    10"
"1","    10"
"1","    10"
"1","    10"
"1","    10"
"1","
[4,]"
"1","    7"
"1","    7"
"1","    7"
"1","    9"
"1","   10"
"1","   10"
"1","    7"
"1","   10"
"1","    9"
"1","    10"
"1","    10"
"1","    10"
"1","    10"
"1","    10"
"1","
[5,]"
"1","    5"
"1","    8"
"1","    8"
"1","    6"
"1","    5"
"1","   10"
"1","   10"
"1","   10"
"1","    9"
"1","    10"
"1","    10"
"1","    10"
"1","    10"
"1","    10"
"1","
[6,]"
"1","    5"
"1","    9"
"1","    8"
"1","   10"
"1","    8"
"1","    8"
"1","    9"
"1","   10"
"1","   10"
"1","    10"
"1","    10"
"1","    10"
"1","     9"
"1","     8"
"1","
"
"1","    "
"1"," [,15]"
"1"," [,16]"
"1"," [,17]"
"1"," [,18]"
"1"," [,19]"
"1"," [,20]"
"1"," [,21]"
"1"," [,22]"
"1"," [,23]"
"1"," [,24]"
"1","
[1,]"
"1","    10"
"1","     9"
"1","    10"
"1","    10"
"1","    10"
"1","    10"
"1","    10"
"1","    10"
"1","    10"
"1","    10"
"1","
[2,]"
"1","    10"
"1","    10"
"1","    10"
"1","    10"
"1","    10"
"1","    10"
"1","    10"
"1","    10"
"1","    10"
"1","    10"
"1","
[3,]"
"1","    10"
"1","    10"
"1","    10"
"1","    10"
"1","    10"
"1","    10"
"1","    10"
"1","    10"
"1","    10"
"1","    10"
"1","
[4,]"
"1","    10"
"1","    10"
"1","    10"
"1","     9"
"1","    10"
"1","    10"
"1","    10"
"1","    10"
"1","    10"
"1","    10"
"1","
[5,]"
"1","    10"
"1","    10"
"1","    10"
"1","    10"
"1","    10"
"1","    10"
"1","     9"
"1","    10"
"1","    10"
"1","    10"
"1","
[6,]"
"1","    10"
"1","    10"
"1","    10"
"1","    10"
"1","    10"
"1","    10"
"1","    10"
"1","    10"
"1","    10"
"1","    10"
"1","
"
