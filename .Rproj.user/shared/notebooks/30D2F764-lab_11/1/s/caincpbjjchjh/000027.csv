"0",""
"0","#Incorrect linear_simulator functions:"
"0","linear_simulator_wrong = function(x, y_int, slope, st_dev)"
"0","{"
"0","  determ = y_int + slope*(x)"
"0","  stochastic = rnorm(n, mean = 0, sd = st_dev)"
"0","  output_sim = determ + stochastic"
"0","  return (output_sim)"
"0","}"
"0",""
"0","#the first option isn't working..trying to simplify as linear_simulator2...this is still causing errors and seems to be returning an even longer vector below"
"0",""
"0","linear_simulator_wrong2 = function(x, y_int, slope, st_dev)"
"0","{"
"0","  output_sim = y_int + slope*(x) + rnorm(n, mean = 0, sd = st_dev)"
"0","  return (output_sim)"
"0","}"
"0",""
"0","#Notes about issues when builing this function: I tried setting mean = 0 and then added the normally distributed error to the end of the linear equation. While the first set of test plots looked ok, when I tried to simulate data using this function I was getting errors due to x and y being different lengths"
"0",""
"0","linear_simulator = function(x, y_int, slope, st_dev)"
"0","{"
"0","  y_det = y_int + slope * x"
"0","  output_sim = rnorm(n = length(x), mean = y_det, sd = st_dev)"
"0","  return (output_sim)"
"0","}"
"0",""
"0",""
"0",""
"0","#test"
"0","n = 200"
"0",""
"0","par(mfrow = c(2, 2), mar = c(1, 1, 1, 1))"
"0","for (i in 1:4)"
"0","{"
"0","  x = runif(n = n)"
"0","  plot("
"0","    x,"
"0","    linear_simulator(x, y_int = 1, slope = 4.5, st_dev = 0.1),"
"0","    main = """", xlab = ""x"", ylab = ""y"","
"0","    pch = 16, col = rgb(0, 0.2, 0, 0.2),"
"0","    axes = FALSE)"
"0","  box()"
"0","}"
