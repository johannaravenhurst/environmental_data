"0",""
"0","#build another linear model and compare our slope coefficient to what we calculated with the original data"
"0","fit_bs1 = lm(b.sidi ~ s.sidi, data = dat_boot)"
"0",""
"0","coef(fit_bs1)"
"1","(Intercept) "
"1","     s.sidi "
"1","
"
"1"," 0.07489893 "
"1","-0.03146039 "
"1","
"
"0","#Bootstrapping loop code for repeating the process many times (simialr to Monte Carlo loop)"
"0",""
"0","#Use numeric to create a vector to hold the results"
"0","m = 10000 "
"0","result_boot = numeric(m)"
"0",""
"0","for(i in 1:m)"
"0","{"
"0","  index_1 = sample(nrow(dat_1), replace = TRUE)"
"0","  "
"0","  dat_resampled_b = "
"0","  data.frame("
"0","    b.sidi = dat_1$b.sidi[index_1],"
"0","    s.sidi = dat_1$s.sidi[index_1]"
"0","  )"
"0",""
"0","fit_bs1 = lm(b.sidi ~ s.sidi, data = dat_resampled_b)"
"0","  "
"0","  result_boot[i] = coef(fit_bs1)[2]"
"0","} "
"0",""
"0","hist("
"0","  result_boot,"
"0","  main = ""Mike's Alternative Distribution of Regression Slope"","
"0","  xlab = ""Slope Parameter"")"
